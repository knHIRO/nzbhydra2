package org.nzbhydra.mapping.newznab.json.caps;

import org.assertj.core.api.AbstractObjectAssert;
import org.assertj.core.util.Objects;

/**
 * Abstract base class for {@link CapsJsonRegistrationAttributes} specific assertions - Generated by CustomAssertionGenerator.
 */
@jakarta.annotation.Generated(value = "assertj-assertions-generator")
public abstract class AbstractCapsJsonRegistrationAttributesAssert<S extends AbstractCapsJsonRegistrationAttributesAssert<S, A>, A extends CapsJsonRegistrationAttributes> extends AbstractObjectAssert<S, A> {

    /**
     * Creates a new <code>{@link AbstractCapsJsonRegistrationAttributesAssert}</code> to make assertions on actual CapsJsonRegistrationAttributes.
     *
     * @param actual the CapsJsonRegistrationAttributes we want to make assertions on.
     */
    protected AbstractCapsJsonRegistrationAttributesAssert(A actual, Class<S> selfType) {
        super(actual, selfType);
    }

    /**
     * Verifies that the actual CapsJsonRegistrationAttributes's available is equal to the given one.
     *
     * @param available the given available to compare the actual CapsJsonRegistrationAttributes's available to.
     * @return this assertion object.
     * @throws AssertionError - if the actual CapsJsonRegistrationAttributes's available is not equal to the given one.
     */
    public S hasAvailable(String available) {
        // check that actual CapsJsonRegistrationAttributes we want to make assertions on is not null.
        isNotNull();

        // overrides the default error message with a more explicit one
        String assertjErrorMessage = "\nExpecting available of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";

        // null safe check
        String actualAvailable = actual.getAvailable();
        if (!Objects.areEqual(actualAvailable, available)) {
            failWithMessage(assertjErrorMessage, actual, available, actualAvailable);
        }

        // return the current assertion for method chaining
        return myself;
    }

    /**
     * Verifies that the actual CapsJsonRegistrationAttributes's open is equal to the given one.
     *
     * @param open the given open to compare the actual CapsJsonRegistrationAttributes's open to.
     * @return this assertion object.
     * @throws AssertionError - if the actual CapsJsonRegistrationAttributes's open is not equal to the given one.
     */
    public S hasOpen(String open) {
        // check that actual CapsJsonRegistrationAttributes we want to make assertions on is not null.
        isNotNull();

        // overrides the default error message with a more explicit one
        String assertjErrorMessage = "\nExpecting open of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";

        // null safe check
        String actualOpen = actual.getOpen();
        if (!Objects.areEqual(actualOpen, open)) {
            failWithMessage(assertjErrorMessage, actual, open, actualOpen);
        }

        // return the current assertion for method chaining
        return myself;
    }

}
