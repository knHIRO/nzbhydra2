package org.nzbhydra.mapping.newznab.json;

import org.assertj.core.api.AbstractObjectAssert;
import org.assertj.core.util.Objects;

/**
 * Abstract base class for {@link NewznabJsonImage} specific assertions - Generated by CustomAssertionGenerator.
 */
@jakarta.annotation.Generated(value = "assertj-assertions-generator")
public abstract class AbstractNewznabJsonImageAssert<S extends AbstractNewznabJsonImageAssert<S, A>, A extends NewznabJsonImage> extends AbstractObjectAssert<S, A> {

    /**
     * Creates a new <code>{@link AbstractNewznabJsonImageAssert}</code> to make assertions on actual NewznabJsonImage.
     *
     * @param actual the NewznabJsonImage we want to make assertions on.
     */
    protected AbstractNewznabJsonImageAssert(A actual, Class<S> selfType) {
        super(actual, selfType);
    }

    /**
     * Verifies that the actual NewznabJsonImage's description is equal to the given one.
     *
     * @param description the given description to compare the actual NewznabJsonImage's description to.
     * @return this assertion object.
     * @throws AssertionError - if the actual NewznabJsonImage's description is not equal to the given one.
     */
    public S hasDescription(String description) {
        // check that actual NewznabJsonImage we want to make assertions on is not null.
        isNotNull();

        // overrides the default error message with a more explicit one
        String assertjErrorMessage = "\nExpecting description of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";

        // null safe check
        String actualDescription = actual.getDescription();
        if (!Objects.areEqual(actualDescription, description)) {
            failWithMessage(assertjErrorMessage, actual, description, actualDescription);
        }

        // return the current assertion for method chaining
        return myself;
    }

    /**
     * Verifies that the actual NewznabJsonImage's link is equal to the given one.
     *
     * @param link the given link to compare the actual NewznabJsonImage's link to.
     * @return this assertion object.
     * @throws AssertionError - if the actual NewznabJsonImage's link is not equal to the given one.
     */
    public S hasLink(String link) {
        // check that actual NewznabJsonImage we want to make assertions on is not null.
        isNotNull();

        // overrides the default error message with a more explicit one
        String assertjErrorMessage = "\nExpecting link of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";

        // null safe check
        String actualLink = actual.getLink();
        if (!Objects.areEqual(actualLink, link)) {
            failWithMessage(assertjErrorMessage, actual, link, actualLink);
        }

        // return the current assertion for method chaining
        return myself;
    }

    /**
     * Verifies that the actual NewznabJsonImage's title is equal to the given one.
     *
     * @param title the given title to compare the actual NewznabJsonImage's title to.
     * @return this assertion object.
     * @throws AssertionError - if the actual NewznabJsonImage's title is not equal to the given one.
     */
    public S hasTitle(String title) {
        // check that actual NewznabJsonImage we want to make assertions on is not null.
        isNotNull();

        // overrides the default error message with a more explicit one
        String assertjErrorMessage = "\nExpecting title of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";

        // null safe check
        String actualTitle = actual.getTitle();
        if (!Objects.areEqual(actualTitle, title)) {
            failWithMessage(assertjErrorMessage, actual, title, actualTitle);
        }

        // return the current assertion for method chaining
        return myself;
    }

    /**
     * Verifies that the actual NewznabJsonImage's url is equal to the given one.
     *
     * @param url the given url to compare the actual NewznabJsonImage's url to.
     * @return this assertion object.
     * @throws AssertionError - if the actual NewznabJsonImage's url is not equal to the given one.
     */
    public S hasUrl(String url) {
        // check that actual NewznabJsonImage we want to make assertions on is not null.
        isNotNull();

        // overrides the default error message with a more explicit one
        String assertjErrorMessage = "\nExpecting url of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";

        // null safe check
        String actualUrl = actual.getUrl();
        if (!Objects.areEqual(actualUrl, url)) {
            failWithMessage(assertjErrorMessage, actual, url, actualUrl);
        }

        // return the current assertion for method chaining
        return myself;
    }

}
