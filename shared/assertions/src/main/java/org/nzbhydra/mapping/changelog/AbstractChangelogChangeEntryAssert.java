package org.nzbhydra.mapping.changelog;

import org.assertj.core.api.AbstractObjectAssert;
import org.assertj.core.util.Objects;

/**
 * Abstract base class for {@link ChangelogChangeEntry} specific assertions - Generated by CustomAssertionGenerator.
 */
@jakarta.annotation.Generated(value = "assertj-assertions-generator")
public abstract class AbstractChangelogChangeEntryAssert<S extends AbstractChangelogChangeEntryAssert<S, A>, A extends ChangelogChangeEntry> extends AbstractObjectAssert<S, A> {

    /**
     * Creates a new <code>{@link AbstractChangelogChangeEntryAssert}</code> to make assertions on actual ChangelogChangeEntry.
     *
     * @param actual the ChangelogChangeEntry we want to make assertions on.
     */
    protected AbstractChangelogChangeEntryAssert(A actual, Class<S> selfType) {
        super(actual, selfType);
    }

    /**
     * Verifies that the actual ChangelogChangeEntry's text is equal to the given one.
     *
     * @param text the given text to compare the actual ChangelogChangeEntry's text to.
     * @return this assertion object.
     * @throws AssertionError - if the actual ChangelogChangeEntry's text is not equal to the given one.
     */
    public S hasText(String text) {
        // check that actual ChangelogChangeEntry we want to make assertions on is not null.
        isNotNull();

        // overrides the default error message with a more explicit one
        String assertjErrorMessage = "\nExpecting text of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";

        // null safe check
        String actualText = actual.getText();
        if (!Objects.areEqual(actualText, text)) {
            failWithMessage(assertjErrorMessage, actual, text, actualText);
        }

        // return the current assertion for method chaining
        return myself;
    }

    /**
     * Verifies that the actual ChangelogChangeEntry's type is equal to the given one.
     *
     * @param type the given type to compare the actual ChangelogChangeEntry's type to.
     * @return this assertion object.
     * @throws AssertionError - if the actual ChangelogChangeEntry's type is not equal to the given one.
     */
    public S hasType(String type) {
        // check that actual ChangelogChangeEntry we want to make assertions on is not null.
        isNotNull();

        // overrides the default error message with a more explicit one
        String assertjErrorMessage = "\nExpecting type of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";

        // null safe check
        String actualType = actual.getType();
        if (!Objects.areEqual(actualType, type)) {
            failWithMessage(assertjErrorMessage, actual, type, actualType);
        }

        // return the current assertion for method chaining
        return myself;
    }

}
