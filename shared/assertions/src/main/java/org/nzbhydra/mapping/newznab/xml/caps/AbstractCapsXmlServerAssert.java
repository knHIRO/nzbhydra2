package org.nzbhydra.mapping.newznab.xml.caps;

import org.assertj.core.api.AbstractObjectAssert;
import org.assertj.core.util.Objects;

/**
 * Abstract base class for {@link CapsXmlServer} specific assertions - Generated by CustomAssertionGenerator.
 */
@jakarta.annotation.Generated(value = "assertj-assertions-generator")
public abstract class AbstractCapsXmlServerAssert<S extends AbstractCapsXmlServerAssert<S, A>, A extends CapsXmlServer> extends AbstractObjectAssert<S, A> {

    /**
     * Creates a new <code>{@link AbstractCapsXmlServerAssert}</code> to make assertions on actual CapsXmlServer.
     *
     * @param actual the CapsXmlServer we want to make assertions on.
     */
    protected AbstractCapsXmlServerAssert(A actual, Class<S> selfType) {
        super(actual, selfType);
    }

    /**
     * Verifies that the actual CapsXmlServer's email is equal to the given one.
     *
     * @param email the given email to compare the actual CapsXmlServer's email to.
     * @return this assertion object.
     * @throws AssertionError - if the actual CapsXmlServer's email is not equal to the given one.
     */
    public S hasEmail(String email) {
        // check that actual CapsXmlServer we want to make assertions on is not null.
        isNotNull();

        // overrides the default error message with a more explicit one
        String assertjErrorMessage = "\nExpecting email of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";

        // null safe check
        String actualEmail = actual.getEmail();
        if (!Objects.areEqual(actualEmail, email)) {
            failWithMessage(assertjErrorMessage, actual, email, actualEmail);
        }

        // return the current assertion for method chaining
        return myself;
    }

    /**
     * Verifies that the actual CapsXmlServer's image is equal to the given one.
     *
     * @param image the given image to compare the actual CapsXmlServer's image to.
     * @return this assertion object.
     * @throws AssertionError - if the actual CapsXmlServer's image is not equal to the given one.
     */
    public S hasImage(String image) {
        // check that actual CapsXmlServer we want to make assertions on is not null.
        isNotNull();

        // overrides the default error message with a more explicit one
        String assertjErrorMessage = "\nExpecting image of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";

        // null safe check
        String actualImage = actual.getImage();
        if (!Objects.areEqual(actualImage, image)) {
            failWithMessage(assertjErrorMessage, actual, image, actualImage);
        }

        // return the current assertion for method chaining
        return myself;
    }

    /**
     * Verifies that the actual CapsXmlServer's strapline is equal to the given one.
     *
     * @param strapline the given strapline to compare the actual CapsXmlServer's strapline to.
     * @return this assertion object.
     * @throws AssertionError - if the actual CapsXmlServer's strapline is not equal to the given one.
     */
    public S hasStrapline(String strapline) {
        // check that actual CapsXmlServer we want to make assertions on is not null.
        isNotNull();

        // overrides the default error message with a more explicit one
        String assertjErrorMessage = "\nExpecting strapline of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";

        // null safe check
        String actualStrapline = actual.getStrapline();
        if (!Objects.areEqual(actualStrapline, strapline)) {
            failWithMessage(assertjErrorMessage, actual, strapline, actualStrapline);
        }

        // return the current assertion for method chaining
        return myself;
    }

    /**
     * Verifies that the actual CapsXmlServer's title is equal to the given one.
     *
     * @param title the given title to compare the actual CapsXmlServer's title to.
     * @return this assertion object.
     * @throws AssertionError - if the actual CapsXmlServer's title is not equal to the given one.
     */
    public S hasTitle(String title) {
        // check that actual CapsXmlServer we want to make assertions on is not null.
        isNotNull();

        // overrides the default error message with a more explicit one
        String assertjErrorMessage = "\nExpecting title of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";

        // null safe check
        String actualTitle = actual.getTitle();
        if (!Objects.areEqual(actualTitle, title)) {
            failWithMessage(assertjErrorMessage, actual, title, actualTitle);
        }

        // return the current assertion for method chaining
        return myself;
    }

    /**
     * Verifies that the actual CapsXmlServer's url is equal to the given one.
     *
     * @param url the given url to compare the actual CapsXmlServer's url to.
     * @return this assertion object.
     * @throws AssertionError - if the actual CapsXmlServer's url is not equal to the given one.
     */
    public S hasUrl(String url) {
        // check that actual CapsXmlServer we want to make assertions on is not null.
        isNotNull();

        // overrides the default error message with a more explicit one
        String assertjErrorMessage = "\nExpecting url of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";

        // null safe check
        String actualUrl = actual.getUrl();
        if (!Objects.areEqual(actualUrl, url)) {
            failWithMessage(assertjErrorMessage, actual, url, actualUrl);
        }

        // return the current assertion for method chaining
        return myself;
    }

    /**
     * Verifies that the actual CapsXmlServer's version is equal to the given one.
     *
     * @param version the given version to compare the actual CapsXmlServer's version to.
     * @return this assertion object.
     * @throws AssertionError - if the actual CapsXmlServer's version is not equal to the given one.
     */
    public S hasVersion(String version) {
        // check that actual CapsXmlServer we want to make assertions on is not null.
        isNotNull();

        // overrides the default error message with a more explicit one
        String assertjErrorMessage = "\nExpecting version of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";

        // null safe check
        String actualVersion = actual.getVersion();
        if (!Objects.areEqual(actualVersion, version)) {
            failWithMessage(assertjErrorMessage, actual, version, actualVersion);
        }

        // return the current assertion for method chaining
        return myself;
    }

}
