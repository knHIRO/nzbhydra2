package org.nzbhydra.mapping.newznab.json;

import org.assertj.core.api.AbstractObjectAssert;
import org.assertj.core.util.Objects;

/**
 * Abstract base class for {@link NewznabJsonResponseAttributes} specific assertions - Generated by CustomAssertionGenerator.
 */
@jakarta.annotation.Generated(value = "assertj-assertions-generator")
public abstract class AbstractNewznabJsonResponseAttributesAssert<S extends AbstractNewznabJsonResponseAttributesAssert<S, A>, A extends NewznabJsonResponseAttributes> extends AbstractObjectAssert<S, A> {

    /**
     * Creates a new <code>{@link AbstractNewznabJsonResponseAttributesAssert}</code> to make assertions on actual NewznabJsonResponseAttributes.
     *
     * @param actual the NewznabJsonResponseAttributes we want to make assertions on.
     */
    protected AbstractNewznabJsonResponseAttributesAssert(A actual, Class<S> selfType) {
        super(actual, selfType);
    }

    /**
     * Verifies that the actual NewznabJsonResponseAttributes's offset is equal to the given one.
     *
     * @param offset the given offset to compare the actual NewznabJsonResponseAttributes's offset to.
     * @return this assertion object.
     * @throws AssertionError - if the actual NewznabJsonResponseAttributes's offset is not equal to the given one.
     */
    public S hasOffset(String offset) {
        // check that actual NewznabJsonResponseAttributes we want to make assertions on is not null.
        isNotNull();

        // overrides the default error message with a more explicit one
        String assertjErrorMessage = "\nExpecting offset of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";

        // null safe check
        String actualOffset = actual.getOffset();
        if (!Objects.areEqual(actualOffset, offset)) {
            failWithMessage(assertjErrorMessage, actual, offset, actualOffset);
        }

        // return the current assertion for method chaining
        return myself;
    }

    /**
     * Verifies that the actual NewznabJsonResponseAttributes's total is equal to the given one.
     *
     * @param total the given total to compare the actual NewznabJsonResponseAttributes's total to.
     * @return this assertion object.
     * @throws AssertionError - if the actual NewznabJsonResponseAttributes's total is not equal to the given one.
     */
    public S hasTotal(String total) {
        // check that actual NewznabJsonResponseAttributes we want to make assertions on is not null.
        isNotNull();

        // overrides the default error message with a more explicit one
        String assertjErrorMessage = "\nExpecting total of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";

        // null safe check
        String actualTotal = actual.getTotal();
        if (!Objects.areEqual(actualTotal, total)) {
            failWithMessage(assertjErrorMessage, actual, total, actualTotal);
        }

        // return the current assertion for method chaining
        return myself;
    }

}
