package org.nzbhydra.mapping.newznab.xml.caps;

import org.assertj.core.api.AbstractObjectAssert;
import org.assertj.core.util.Objects;

/**
 * Abstract base class for {@link CapsXmlLimits} specific assertions - Generated by CustomAssertionGenerator.
 */
@jakarta.annotation.Generated(value = "assertj-assertions-generator")
public abstract class AbstractCapsXmlLimitsAssert<S extends AbstractCapsXmlLimitsAssert<S, A>, A extends CapsXmlLimits> extends AbstractObjectAssert<S, A> {

    /**
     * Creates a new <code>{@link AbstractCapsXmlLimitsAssert}</code> to make assertions on actual CapsXmlLimits.
     *
     * @param actual the CapsXmlLimits we want to make assertions on.
     */
    protected AbstractCapsXmlLimitsAssert(A actual, Class<S> selfType) {
        super(actual, selfType);
    }

    /**
     * Verifies that the actual CapsXmlLimits's defaultValue is equal to the given one.
     *
     * @param defaultValue the given defaultValue to compare the actual CapsXmlLimits's defaultValue to.
     * @return this assertion object.
     * @throws AssertionError - if the actual CapsXmlLimits's defaultValue is not equal to the given one.
     */
    public S hasDefaultValue(Integer defaultValue) {
        // check that actual CapsXmlLimits we want to make assertions on is not null.
        isNotNull();

        // overrides the default error message with a more explicit one
        String assertjErrorMessage = "\nExpecting defaultValue of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";

        // null safe check
        Integer actualDefaultValue = actual.getDefaultValue();
        if (!Objects.areEqual(actualDefaultValue, defaultValue)) {
            failWithMessage(assertjErrorMessage, actual, defaultValue, actualDefaultValue);
        }

        // return the current assertion for method chaining
        return myself;
    }

    /**
     * Verifies that the actual CapsXmlLimits's max is equal to the given one.
     *
     * @param max the given max to compare the actual CapsXmlLimits's max to.
     * @return this assertion object.
     * @throws AssertionError - if the actual CapsXmlLimits's max is not equal to the given one.
     */
    public S hasMax(Integer max) {
        // check that actual CapsXmlLimits we want to make assertions on is not null.
        isNotNull();

        // overrides the default error message with a more explicit one
        String assertjErrorMessage = "\nExpecting max of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";

        // null safe check
        Integer actualMax = actual.getMax();
        if (!Objects.areEqual(actualMax, max)) {
            failWithMessage(assertjErrorMessage, actual, max, actualMax);
        }

        // return the current assertion for method chaining
        return myself;
    }

}
