package org.nzbhydra.searching.dtoseventsenums;

/**
 * {@link SearchRequestParameters} specific assertions - Generated by CustomAssertionGenerator.
 * <p>
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it,
 * extend {@link AbstractSearchRequestParametersAssert} instead.
 */
@jakarta.annotation.Generated(value = "assertj-assertions-generator")
public class SearchRequestParametersAssert extends AbstractSearchRequestParametersAssert<SearchRequestParametersAssert, SearchRequestParameters> {

    /**
     * Creates a new <code>{@link SearchRequestParametersAssert}</code> to make assertions on actual SearchRequestParameters.
     *
     * @param actual the SearchRequestParameters we want to make assertions on.
     */
    public SearchRequestParametersAssert(SearchRequestParameters actual) {
        super(actual, SearchRequestParametersAssert.class);
    }

    /**
     * An entry point for SearchRequestParametersAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
     * With a static import, one can write directly: <code>assertThat(mySearchRequestParameters)</code> and get specific assertion with code completion.
     *
     * @param actual the SearchRequestParameters we want to make assertions on.
     * @return a new <code>{@link SearchRequestParametersAssert}</code>
     */
    @org.assertj.core.util.CheckReturnValue
    public static SearchRequestParametersAssert assertThat(SearchRequestParameters actual) {
        return new SearchRequestParametersAssert(actual);
    }
}
