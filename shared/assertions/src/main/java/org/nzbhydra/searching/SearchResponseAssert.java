package org.nzbhydra.searching;

/**
 * {@link SearchResponse} specific assertions - Generated by CustomAssertionGenerator.
 * <p>
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it,
 * extend {@link AbstractSearchResponseAssert} instead.
 */
@jakarta.annotation.Generated(value = "assertj-assertions-generator")
public class SearchResponseAssert extends AbstractSearchResponseAssert<SearchResponseAssert, SearchResponse> {

    /**
     * Creates a new <code>{@link SearchResponseAssert}</code> to make assertions on actual SearchResponse.
     *
     * @param actual the SearchResponse we want to make assertions on.
     */
    public SearchResponseAssert(SearchResponse actual) {
        super(actual, SearchResponseAssert.class);
    }

    /**
     * An entry point for SearchResponseAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
     * With a static import, one can write directly: <code>assertThat(mySearchResponse)</code> and get specific assertion with code completion.
     *
     * @param actual the SearchResponse we want to make assertions on.
     * @return a new <code>{@link SearchResponseAssert}</code>
     */
    @org.assertj.core.util.CheckReturnValue
    public static SearchResponseAssert assertThat(SearchResponse actual) {
        return new SearchResponseAssert(actual);
    }
}
