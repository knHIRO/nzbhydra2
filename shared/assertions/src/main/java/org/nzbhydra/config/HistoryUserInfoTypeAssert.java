package org.nzbhydra.config;

/**
 * {@link HistoryUserInfoType} specific assertions - Generated by CustomAssertionGenerator.
 * <p>
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it,
 * extend {@link AbstractHistoryUserInfoTypeAssert} instead.
 */
@jakarta.annotation.Generated(value = "assertj-assertions-generator")
public class HistoryUserInfoTypeAssert extends AbstractHistoryUserInfoTypeAssert<HistoryUserInfoTypeAssert, HistoryUserInfoType> {

    /**
     * Creates a new <code>{@link HistoryUserInfoTypeAssert}</code> to make assertions on actual HistoryUserInfoType.
     *
     * @param actual the HistoryUserInfoType we want to make assertions on.
     */
    public HistoryUserInfoTypeAssert(HistoryUserInfoType actual) {
        super(actual, HistoryUserInfoTypeAssert.class);
    }

    /**
     * An entry point for HistoryUserInfoTypeAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
     * With a static import, one can write directly: <code>assertThat(myHistoryUserInfoType)</code> and get specific assertion with code completion.
     *
     * @param actual the HistoryUserInfoType we want to make assertions on.
     * @return a new <code>{@link HistoryUserInfoTypeAssert}</code>
     */
    @org.assertj.core.util.CheckReturnValue
    public static HistoryUserInfoTypeAssert assertThat(HistoryUserInfoType actual) {
        return new HistoryUserInfoTypeAssert(actual);
    }
}
